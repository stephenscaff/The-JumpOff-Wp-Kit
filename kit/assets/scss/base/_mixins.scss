/*----------------------------------------------
--Microclearfix
-----------------------------------------------*/
@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

/*---------------------------------   
--mixin for links
-----------------------------------  */
@mixin link-styles($mainColor: $color-darkgrey, $hoverColor: $color-alpha){
 color: $mainColor;
 text-decoration: none; 
 line-height:inherit;
 @include transition(color 0.4s ease-in-out);

 &:hover, &:focus{
  color: $hoverColor;
  @include transition(color 0.4s ease-out-out);
 }
 &:active{
  color: darken($hoverColor, 25);
 }
}


/*---------------------------------   
-Transition Delay on nth-childs
-----------------------------------  */
@mixin nth-transition-delay($delayItems: 7, $delayTime: 1.5s){
@for $i from 1 through $delayItems {
  &:nth-child(#{$i}) {   
   transition-delay: $delayTime * $i; 
  }
 }
}
/*----------------------------------------------
--Activate browser's 3d engine for smoother FPS
-----------------------------------------------*/
@mixin engine3d {
  -webkit-transform: translateZ(0);
  visibility: visible;
  -webkit-backface-visibility: hidden;
}

/*----------------------------------------------
--Unstyle a list
-----------------------------------------------*/
@mixin unstyled-list {
  margin: 0 auto;
  padding-left: 0;
  list-style-type: none;
}

/*----------------------------------------------
--Word wrapping
-----------------------------------------------*/
@mixin truncate {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
@mixin hyphenate {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

/*----------------------------------------------
--Common background-image treatmen
-----------------------------------------------*/
@mixin bg-cover {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

/*----------------------------------------------
--Overlays: tint bgs via pseudo element
-----------------------------------------------*/
@mixin bg-overlay($bgColor: #000, $bgOpacity: 0.6) {
  &:after {
    z-index: 0;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba($bgColor, $bgOpacity);
  }
 
  & > * {
    z-index: 2;
    position: relative;
  }
}

/*----------------------------------------------
--Font size: rwd
-----------------------------------------------*/
@mixin font-rwd($fontSmall, $fontMed, $fontLarge, $fontXLarge) {
  font-size: $fontSmall;
 
  @media (min-width: $mq-med) {
    font-size: $fontMed;
  } 
  @media (min-width: $mq-large) {
    font-size: $fontLarge;
  }
  @media (min-width: $mq-xlarge) {
    font-size: $fontXLarge;
  }  
}

/*----------------------------------------------   
--Layouts: Grid - Block
- Useage: @include g-blocks(1, 2, 3, 4);
  Notes: Clearing via nth-type. Grimey solution i know.
         But, shit works.
-----------------------------------------------  */
@mixin g-blocks($gbSm, $gbMed, $gbLg, $gbXlg, $pad){
  display: block;
  padding: 0;
  margin-left: -$pad;
  margin-right: -$pad;
  *zoom: 1; 
  @include clearfix;

& > li, & > .grid-item{
 display: inline-block;
 height: auto;
 float: left;
 padding:$pad;
 width: 100%/$gbSm;
 $nth-equation: (#{$gbSm}n+1);
 &:nth-of-type(n) { clear: none; }
 &:nth-of-type(#{$nth-equation}) { clear: both; }

  @media(min-width: $mq-med){
   width: 100%/$gbMed;
   $nth-equation: (#{$gbMed}n+1);
   &:nth-of-type(n) { clear: none; }
   &:nth-of-type(#{$nth-equation}) { clear: both; }
  }
  @media(min-width: $mq-large){
   width: 100%/$gbLg;
   $nth-equation: (#{$gbLg}n+1);
   &:nth-of-type(n) { clear: none; }
   &:nth-of-type(#{$nth-equation}) { clear: both; }
  }
  @media(min-width: $mq-xlarge){
   width: 100%/$gbXlg;
   $nth-equation: (#{$gbXlg}n+1);
   &:nth-of-type(n) { clear: none; }
   &:nth-of-type(#{$nth-equation}) { clear: both; }
  } 
 }
}
